// LicenseManagerGUI.java
// Created by Jack Doyle
// Simplified License Manager GUI (student version)

package licensemanagergui;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import java.awt.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class LicenseManagerGUI {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Software License Manager");
        frame.setSize(800, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Menu bar (just for looks)
        JMenuBar menuBar = new JMenuBar();
        menuBar.add(new JMenu("Product"));
        menuBar.add(new JMenu("License"));
        menuBar.add(new JMenu("Tools"));
        menuBar.add(new JMenu("Help"));
        frame.setJMenuBar(menuBar);

        // Left: simple tree
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Database Storage");
        root.add(new DefaultMutableTreeNode("Local Licenses"));
        JTree tree = new JTree(root);
        JScrollPane treeScroll = new JScrollPane(tree);

        // Right: input form + table
        JPanel right = new JPanel(new BorderLayout(10, 10));

        JPanel form = new JPanel(new GridLayout(5, 2, 5, 5));
        form.setBorder(BorderFactory.createTitledBorder("Create License"));

        JComboBox<String> softwareBox = new JComboBox<>(new String[]{"AutoCAD", "Windows", "Photoshop", "WinRAR"});
        JTextField nameField = new JTextField();
        JTextField keyField = new JTextField();
        JTextField expiryField = new JTextField();
        JButton genBtn = new JButton("Generate");
        JButton clrBtn = new JButton("Clear");

        form.add(new JLabel("Software:"));  form.add(softwareBox);
        form.add(new JLabel("User Name:")); form.add(nameField);
        form.add(new JLabel("License Key:")); form.add(keyField);
        form.add(new JLabel("Expiry (MM/DD/YYYY):")); form.add(expiryField);
        form.add(genBtn); form.add(clrBtn);

        right.add(form, BorderLayout.NORTH);

        // Table for results
        String[] cols = {"Software", "User", "Key", "Code", "Expiry", "Status"};
        DefaultTableModel model = new DefaultTableModel(cols, 0);
        JTable table = new JTable(model);
        right.add(new JScrollPane(table), BorderLayout.CENTER);

        // Status bar
        JLabel status = new JLabel("License Count: 0", SwingConstants.RIGHT);
        frame.add(status, BorderLayout.SOUTH);

        // Split layout
        JSplitPane split = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, treeScroll, right);
        split.setDividerLocation(200);
        frame.add(split);

        // Button actions
        genBtn.addActionListener(e -> {
            String s = (String) softwareBox.getSelectedItem();
            String n = nameField.getText().trim();
            String k = keyField.getText().trim();
            String ex = expiryField.getText().trim();

            if (n.isEmpty() || k.isEmpty() || ex.isEmpty()) {
                JOptionPane.showMessageDialog(frame, "Fill all fields.");
                return;
            }

            try {
                DateTimeFormatter f = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                LocalDate d = LocalDate.parse(ex, f);
                String code = s.toUpperCase() + "-" + n.toUpperCase() + "-" + Math.abs(k.hashCode());
                model.addRow(new Object[]{s, n, k, code, d.format(f), "ACTIVE"});
                status.setText("License Count: " + model.getRowCount());
            } catch (Exception exx) {
                JOptionPane.showMessageDialog(frame, "Invalid date. Use MM/DD/YYYY.");
            }
        });

        clrBtn.addActionListener(e -> {
            softwareBox.setSelectedIndex(0);
            nameField.setText("");
            keyField.setText("");
            expiryField.setText("");
        });

        // System look
        try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception ignored) {}

        frame.setVisible(true);
    }
}
